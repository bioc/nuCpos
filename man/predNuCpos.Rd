\name{predNuCpos}
\alias{predNuCpos}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{R function for prediction of nucleosome positioning}
\description{
    Like the \code{predNuPoP} function of the parental package 
    \pkg{NuPoP} does, this function invokes Fortran codes to 
    compute the Viterbi prediction of nucleosome positioning, 
    nucleosome occupancy score and histone binding affinity 
    score. Nucleosomal and linker models 
    built upon the chemical maps are used for the calculation.

    When \code{ActLikePredNuPoP} is \code{TRUE}, this function 
    acts like the \code{predNuPoP} function of \pkg{NuPoP}: 
    the function receives the path to a file containing a 
    DNA sequence (specified by \code{file}) and save a text 
    file containing the prediction results in the 
    working directory. Nucleosome positioning throughout a 
    long chromosome containing \sQuote{N} can be predicted.

    When \code{ActLikePredNuPoP} is \code{FALSE} (dafault), 
    this function directly receives a DNA sequence as an R 
    object (\code{inseq}) and returns the prediction results 
    as a data frame. \sQuote{N} must not be in the sequence.
    
}
\usage{predNuCpos(file, inseq, species="mm", smoothHBA=FALSE, 
    std=FALSE, ActLikePredNuPoP = FALSE)}

%- maybe also 'usage' for other objects documented here.
\arguments{
    \item{file}{The file path to the FASTA file to be tested. 
        The FASTA must be in a single FASTA format.
        This will be ignored when \code{ActLikePredNuPoP = FALSE}.}
    \item{inseq}{a character or DNAString object. 
        The length of the character string must be over 1 kb.
        This will be ignored when \code{ActLikePredNuPoP = TRUE}.}
    \item{species}{a character = mm, sc or sp; 
        "mm" for mouse, "sc" for \emph{S. cerevisiae} and 
        "sp" for \emph{S. pombe}.}
    \item{smoothHBA}{a logical value indicating whether 
        smoothing of histone binding affinity should be 
        applied as in the \code{predNuPoP} function of the parental 
        package \pkg{NuPoP}.}
    \item{std}{a logical value indicating whether 
        standardization should be applied to the histone 
        binding affinity score.}
    \item{ActLikePredNuPoP}{a logical value indicating whether 
        the function acts like the \code{predNuPoP} function 
        in the parental package \pkg{NuPoP}.}
}
\value{
    When the \code{ActLikePredNuPoP} argument is set as \code{TRUE}, 
    \code{predNuCpos} outputs the prediction 
    results into the working directory, 
    in the same format as that generated by the \code{predNuPoP} 
    function of \pkg{NuPoP}. Thus, it can be handled by the 
    \pkg{NuPoP} functions \code{readNuPoP} and \code{plotNuPoP}.
    The output file is named after the input file with 
    an extension \dQuote{_Prediction4.txt}. 
    The output file has five columns:
    \item{Position}{position in the input DNA sequence}
    \item{P-start}{probability that a nucleosome starts at}
    \item{Occup}{nucleosome occupancy score}
    \item{N/L}{Viterbi path (1 and 0 for the nucleosome 
        and linker states, repsectively)}
    \item{Affinity}{histone binding affinity score}

    When the \code{ActLikePredNuPoP} argument is set as \code{FALSE}, 
    \code{predNuCpos} outputs the prediction 
    results as a data frame object with five columns, 
    on which the \code{plotNuPoP} function of \pkg{NuPoP} 
    can be applied:
    \item{pos}{position in the input DNA sequence}
    \item{pstart}{probability that a nucleosome starts at}
    \item{nucoccup}{nucleosome occupancy score}
    \item{viterbi}{Viterbi path (1 and 0 for the nucleosome 
        and linker states, repsectively)}
    \item{affinity}{histone binding affinity score}
}

\examples{
predNuCpos(file = system.file("extdata", "TRP1ARS1x1.fasta", 
    package="nuCpos"), species="sc", smoothHBA=FALSE, 
    std=FALSE, ActLikePredNuPoP = TRUE)
library(NuPoP)
results.TRP1ARS1.1 <- readNuPoP("TRP1ARS1x1.fasta_Prediction4.txt", 
    startPos = 1, endPos = 1465)
results.TRP1ARS1.1[72:76,]
plotNuPoP(results.TRP1ARS1.1)
TRP1ARS1 <- paste(scan(file = 
    system.file("extdata", "TRP1ARS1x1.fasta", package = "nuCpos"), 
    what = character(), skip = 1), sep = "", collapse = "")
results.TRP1ARS1.2 <- 
    predNuCpos(inseq = TRP1ARS1, species = "sc", smoothHBA = FALSE, 
    ActLikePredNuPoP = FALSE)
results.TRP1ARS1.2[72:76,]
plotNuPoP(results.TRP1ARS1.2)
## The DNA sequence TRP1ARS1 is from Fuse et al. (2017).
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
%\keyword{}

